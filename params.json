{"name":"Google","tagline":"google maps","body":"<!DOCTYPE html>\r\n<html lang=\"en\">\r\n<head>\r\n    <meta charset=\"UTF-8\">\r\n    <meta name=\"viewport\" content=\"width=device-width, user-scalable=no\">\r\n    <title></title>\r\n</head>\r\n<style>\r\n    body{\r\n        margin: 0;\r\n        padding: 0;\r\n    }\r\n    p, label{\r\n        color: #4d4c4c;\r\n    }\r\n    .main-container{\r\n        max-width: 1200px;\r\n        margin: 0 auto;\r\n    }\r\n    .main-container:after{\r\n        content: '';\r\n        display:block;\r\n        clear: both;\r\n    }\r\n    #map{\r\n        width: 48.5%;\r\n        height: 300px;\r\n        float: left;\r\n        border: 1px solid #ec6919;\r\n    }\r\n    #total-distance{\r\n        width: 48.5%;\r\n        float: left;\r\n        margin-right: 2%;\r\n    }\r\n    #total-distance p{\r\n        margin: 0;\r\n    }\r\n    .custom-distance input{\r\n        width: 100%;\r\n        margin-bottom: 10px;\r\n        border: 1px solid #ec6919;\r\n        padding: 5px;\r\n        font-size: 13px;\r\n    }\r\n    #waypoints{\r\n        height: 300px;\r\n        overflow-y: scroll;\r\n        font-size: 12px;\r\n        border: 1px solid #ec6919;\r\n    }\r\n    .end-point-container{\r\n        display: none;\r\n    }\r\n    .clear{\r\n        clear: both;\r\n    }\r\n    .adp-placemark{\r\n        margin-top: 0px;\r\n    }\r\n    @media (max-width: 680px){\r\n        #total-distance, #map{\r\n            width: 100%;\r\n            float: none;\r\n        }\r\n        #total-distance{\r\n            margin-bottom: 20px;\r\n        }\r\n        .main-container{\r\n            width: 90%;\r\n        }\r\n    }\r\n</style>\r\n<body>\r\n<div class=\"main-container\">\r\n    <p>Total distance is: <span id=\"total-distance-value\"></span> </p>\r\n    <div id=\"total-distance\">\r\n        <div id=\"waypoints\"></div>\r\n    </div>\r\n    <div id=\"map\"></div>\r\n    <div class=\"clear\"></div>\r\n    <div class=\"custom-distance\">\r\n        <p>Search for another route:</p>\r\n        <div class=\"start-point-container\">\r\n            <label>Start Point:</label><br>\r\n            <input type=\"text\" id=\"start-point\" name=\"start-point\">\r\n        </div>\r\n        <div class=\"end-point-container\">\r\n            <label>End Point:</label><br>\r\n            <input type=\"text\" id=\"end-point\" name=\"end-point\">\r\n        </div>\r\n    </div>\r\n</div>\r\n<script type=\"text/javascript\">\r\nvar googleMapDirections = function(elem){\r\n    this.initMap = function (){\r\n        var map = new google.maps.Map(document.getElementById(elem.map),{\r\n            zoom: 6,\r\n            center: {lat: 45.58, lng: 24.21}\r\n        });\r\n\r\n        var directionsService = new google.maps.DirectionsService;\r\n        var directionsDisplay = new google.maps.DirectionsRenderer({\r\n            draggable: true,\r\n            map: map,\r\n            panel: document.getElementById(elem.routeDirections)\r\n        });\r\n\r\n        directionsDisplay.addListener('directions_changed', function(){\r\n            computeTotalDistance(directionsDisplay.getDirections());\r\n        });\r\n\r\n        if (elem.initialStart && !elem.detectLocation) {\r\n            displayRoute(elem.initialStart, elem.initialEnd, directionsService, directionsDisplay);\r\n        } else {\r\n            getLocation();\r\n        }\r\n\r\n\r\n        function getLocation() {\r\n            if (navigator.geolocation) {\r\n                navigator.geolocation.getCurrentPosition(showPosition);\r\n            } else {\r\n                x.innerHTML = \"Geolocation is not supported by this browser.\";\r\n            }\r\n        }\r\n        function showPosition(position) {\r\n            getInitialLocation(position.coords.latitude, position.coords.longitude);\r\n        }\r\n\r\n        function getInitialLocation(latitude, longitude){\r\n            var xmlhttp = new XMLHttpRequest(),\r\n                    url = \"https://maps.googleapis.com/maps/api/geocode/json?latlng=\"+latitude+\",\"+longitude;\r\n\r\n            xmlhttp.onreadystatechange = function() {\r\n                if (xmlhttp.readyState == 4 && xmlhttp.status == 200) {\r\n                    var initialLocation = JSON.parse(xmlhttp.responseText).results[0].formatted_address;\r\n                    displayRoute(initialLocation, elem.initialEnd, directionsService, directionsDisplay);\r\n                }\r\n            }\r\n            xmlhttp.open(\"GET\", url, true);\r\n            xmlhttp.send();\r\n        }\r\n\r\n\r\n        var startPoint = document.getElementById(elem.startPoint),\r\n             startPointBox = new google.maps.places.SearchBox(startPoint),\r\n             endPoint = document.getElementById(elem.endPoint),\r\n             endPointBox = new google.maps.places.SearchBox(endPoint),\r\n             newPoints = [];\r\n\r\n        //Input start point\r\n        startPointBox.addListener('places_changed', function() {\r\n            var places = startPointBox.getPlaces();\r\n\r\n            if (places.length == 0) {\r\n                return;\r\n            }\r\n            document.querySelector(elem.mainPointsContainer).style.display = 'block';\r\n            newPoints[0] = places[0]['formatted_address'];\r\n            if (newPoints[1]!== undefined){\r\n                displayRoute(newPoints[0], newPoints[1], directionsService, directionsDisplay);\r\n            }\r\n        });\r\n        //End Input start point\r\n\r\n        //Input end point\r\n        endPointBox.addListener('places_changed', function() {\r\n            var placesEnd = endPointBox.getPlaces();\r\n\r\n            if (placesEnd.length == 0) {\r\n                return;\r\n            }\r\n            newPoints[1] = placesEnd[0]['formatted_address'];\r\n            displayRoute(newPoints[0], newPoints[1], directionsService, directionsDisplay);\r\n        });\r\n        //End Input end point\r\n    }\r\n\r\n    //Display the route points\r\n    function displayRoute (origin, destination, service, display){\r\n        service.route({\r\n            origin:origin,\r\n            destination: destination,\r\n            waypoints: [],\r\n            travelMode: google.maps.TravelMode.DRIVING,\r\n            avoidTolls: true\r\n        },function(response, status){\r\n            if (status === google.maps.DirectionsStatus.OK) {\r\n                display.setDirections(response);\r\n            } else {\r\n                alert('Could not display directions due to:' + status);\r\n            }\r\n        });\r\n    }\r\n    //End display the route points\r\n\r\n    //Calculate the total distance\r\n    function computeTotalDistance(result){\r\n        var total = 0;\r\n        var myroute = result.routes[0];\r\n        for(var i = 0; i < myroute.legs.length; i++){\r\n            total += myroute.legs[i].distance.value;\r\n        }\r\n        total = Math.round(total / 1000);\r\n        document.getElementById('total-distance-value').innerHTML = total + ' km';\r\n    }\r\n    //End calculate the total distance\r\n}\r\n\r\nvar myMap = new googleMapDirections({\r\n    detectLocation: true,\r\n    initialStart: 'Cluj',\r\n    initialEnd: 'Sibiu',\r\n    map: 'map',\r\n    routeDirections: 'waypoints',\r\n    mainPointsContainer: '.end-point-container',\r\n    startPoint: 'start-point',\r\n    endPoint: 'end-point',\r\n});\r\n\r\n\r\n</script>\r\n<script src=\"https://maps.googleapis.com/maps/api/js?signed_in=true&callback=myMap.initMap&libraries=places\" async defer></script>\r\n</body>\r\n</html>","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}